@roboto-font-path: '../../../dist/fonts';

.roboto-font(@variant, @type, @weight, @style) {
  @font-full-path: '@{roboto-font-path}/@{variant}';
  @font-face {
    font-family: '@{variant}';
    src: url('@{font-full-path}-@{type}.eot');
    src: local('@{variant} @{type}'),
    local('@{variant}-@{type}'),
    url('@{font-full-path}-@{type}.eot?#iefix') format('embedded-opentype'),
    url('@{font-full-path}-@{type}.woff2') format('woff2'),
    url('@{font-full-path}-@{type}.woff') format('woff'),
    url('@{font-full-path}-@{type}.ttf') format('truetype'),
    url('@{font-full-path}-@{type}.svg#@{variant}') format('svg');
    font-weight: @weight;
    font-style: @style;
  }
  @font-face {
    font-family: '@{variant}-@{type}';
    src: url('@{font-full-path}-@{type}.eot');
    src: local('@{variant} @{type}'),
    local('@{variant}-@{type}'),
    url('@{font-full-path}-@{type}.eot?#iefix') format('embedded-opentype'),
    url('@{font-full-path}-@{type}.woff2') format('woff2'),
    url('@{font-full-path}-@{type}.woff') format('woff'),
    url('@{font-full-path}-@{type}.ttf') format('truetype'),
    url('@{font-full-path}-@{type}.svg#@{variant}') format('svg');
  }
}

.form-control-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5) {
  .help-block,
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline,
  &.radio label,
  &.checkbox label,
  &.radio-inline label,
  &.checkbox-inline label  {
    color: @text-color;
  }
  .form-control {
    border-color: @border-color;
    .box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
    &:focus , &.state-focus{
      border-color: darken(@border-color, 10%);
      @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@border-color, 20%);
      .box-shadow(@shadow);
    }
  }
  .input-group-addon {
    color: @text-color;
    border-color: @border-color;
    background-color: @background-color;
  }
  .form-control-feedback {
    color: @text-color;
  }
}


.form-control-focus(@color: @input-border-focus) {
  @color-rgba: rgba(red(@color), green(@color), blue(@color), .6);
  &:focus , &.state-focus {
    border-color: @color;
    outline: 0;
    .box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px @{color-rgba}");
  }
}

.input-size(@input-height; @padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {
  height: @input-height;
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  line-height: @line-height;
  border-radius: @border-radius;
  select& {
    height: @input-height;
    line-height: @input-height;
  }
  textarea&,
  select[multiple]& {
    height: auto;
  }
}